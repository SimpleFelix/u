// Generated by ESG at 2021-09-18 13:27:23. github.com/simplefelix/esg

package u

import "fmt"

type AnyError struct {
	_extra_    interface{}
	err        interface{}
	statusCode int
	errorCode  interface{}
}

// ErrorCode change it as you prefer.
func (e AnyError) ErrorCode() interface{} {
	return e.errorCode
}

// StatusCode refers to http response status code.
// Developer may want to set response status code based on error.
// For example, if the error is caused by bad request, then change the return value to 400.
// Ignore this function if no need for your project.
func (e AnyError) StatusCode() int {
	return e.statusCode
}

// Extra returns _extra_ which can be set by user. Usage of _extra_ is determined by user.
func (e AnyError) Extra() interface{} {
	return e._extra_
}

// SetExtra sets _extra_ with a value by user. Usage of _extra_ is determined by user.
func (e AnyError) SetExtra(extra interface{}) {
	e._extra_ = extra
}

// Error implementation to error interface.
func (e AnyError) Error() string {
	return fmt.Sprintf(`%v`, e.err)
}

// ErrAnyError is convenient constructor.
func ErrAnyError(err interface{}) AnyError {
	return AnyError{
		errorCode:  "AnyError",
		statusCode: 500,
		err:        err,
	}
}

func NewAnyError(errorCode interface{}, err interface{}, statusCode int) AnyError {
	return AnyError{
		errorCode:  errorCode,
		statusCode: statusCode,
		err:        err,
	}
}
